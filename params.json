{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"ScalaFormat","body":"ScalaFormat\r\n============\r\n\r\nSummary\r\n-------\r\n\r\nScalaFormat is a scala code formatter plugin for [Sublime Text 2]. It is rewritten\r\nfrom [Takafumi Ikeda]'s [Sublime Scalariform] plugin, with following enhancements:\r\n\r\n* Formatting buffer instead of formatting source file directly.\r\n* Auto format on file save support (disabled by default).\r\n\r\n[Sublime Text 2]: http://www.sublimetext.com/\r\n[Takafumi Ikeda]: https://github.com/ikeike443\r\n[Sublime Scalariform]: https://github.com/ikeike443/Sublime-Scalariform\r\n\r\n\r\nPrerequisites\r\n-------------\r\n\r\n* Java™ 5 or later.\r\n* Patience - It may take a few seconds before scalariform finished.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n### With the Package Control plugin\r\nTBD\r\n\r\n### Manual Install\r\n**Without Git:**\r\n[Download](https://github.com/timonwong/ScalaFormat) the latest source code, and\r\nextract to the Packages directory.\r\n\r\n**With Git:**\r\nType the following command in your Sublime Text 2 Packages directory:\r\n\r\n`git clone git://github.com/timonwong/ScalaFormat.git`\r\n\r\nThe \"Packages\" directory is located at:\r\n\r\n* **Windows:**  `%APPDATA%\\Sublime Text 2\\Packages\\`\r\n* **Linux:**    `~/.config/sublime-text-2/Packages/`\r\n* **OS X:**     `~/Library/Application Support/Sublime Text 2/Packages/`\r\n\r\nUsage\r\n-----\r\n\r\n### Key Bindings\r\nThe default key bindings for this plugin:\r\n\r\n* <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F</kbd>: Format current file.\r\n\r\n### Command Palette\r\nOpen the command palette, it apperas as `ScalaFormat: Format Current File`.\r\n\r\nSettings\r\n--------\r\n\r\n```javascript\r\n{\r\n    // If the executable is not in the system path, you may have to set the java executable manually\r\n    \"java_executable\": \"java\",\r\n    // Auto format on file save\r\n    \"autoformat_on_save\": false,\r\n    // scalariform command line options - preferences\r\n    // https://github.com/mdr/scalariform/wiki/Command-line-tool\r\n    \"scalariform\": {\r\n        // Enable/disable Align parameters on different lines in the same column\r\n        \"alignParameters\": false,\r\n        // Enable/disable Align the arrows of consecutive single-line case statements\r\n        \"alignSingleLineCaseStatements\": false,\r\n        // Set Maximum number of spaces inserted before an arrow to align case statements: [1-100]\r\n        \"alignSingleLineCaseStatements.maxArrowIndent\": 40,\r\n        // Enable/disable Compact Control Readability style\r\n        \"compactControlReadability\": false,\r\n        // Enable/disable Omit spaces when formatting a '+' operator on String literals\r\n        \"compactStringConcatenation\": false,\r\n        // Enable/disable Double indent either a class's parameters or its inheritance list\r\n        \"doubleIndentClassDeclaration\": false,\r\n        // Enable/disable Format XML literals\r\n        \"formatXml\": true,\r\n        // Enable/disable Indent local defs an extra level\r\n        \"indentLocalDefs\": false,\r\n        // Enable/disable Indent package blocks\r\n        \"indentPackageBlocks\": true,\r\n        // Set Number of spaces to use for indentation: [1-10]\r\n        \"indentSpaces\": 2,\r\n        // Enable/disable Use a tab character for indentation\r\n        \"indentWithTabs\": false,\r\n        // Enable/disable Start multiline Scaladoc comment body on same line as the opening '/**'\r\n        \"multilineScaladocCommentsStartOnFirstLine\": false,\r\n        // Enable/disable Allow a newline before a ')' in an argument expression\r\n        \"preserveDanglingCloseParenthesis\": false,\r\n        // Enable/disable Place Scaladoc asterisks beneath the second asterisk in the opening '/**', as opposed to the first\r\n        \"placeScaladocAsterisksBeneathSecondAsterisk\": false,\r\n        // Enable/disable Preserve a space before a parenthesis argument\r\n        \"preserveSpaceBeforeArguments\": false,\r\n        // Enable/disable Replace arrow tokens with unicode, equivalents: => with ⇒, and <- with ←\r\n        \"rewriteArrowSymbols\": false,\r\n        // Enable/disable Add a space before colons\r\n        \"spaceBeforeColon\": false,\r\n        // Enable/disable Require a space after '[' and before ']'\r\n        \"spaceInsideBrackets\": false,\r\n        // Enable/disable Require a space after '(' and before ')'\r\n        \"spaceInsideParentheses\": false,\r\n        // Enable/disable Add a space around the @ token in pattern binders\r\n        \"spacesWithinPatternBinders\": true\r\n    }\r\n}\r\n```\r\n\r\nWhat's New\r\n==========\r\n\r\nv1.0 (TBD)\r\n\r\n* First release.\r\n\r\nLicense\r\n-------\r\n\r\nThis plugin released under MIT License:\r\n\r\n    Copyright (c) 2012 Timon Wong\r\n    Portions Copyright (c) 2012 Takafumi Ikeda\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n    this software and associated documentation files (the \"Software\"), to deal in\r\n    the Software without restriction, including without limitation the rights to\r\n    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n    of the Software, and to permit persons to whom the Software is furnished to do\r\n    so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n","google":"","tagline":"Yet another Scala code formatter for Sublime Text 2"}